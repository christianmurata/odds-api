scalar Date

type Category {
  key: String
  name: String
}

type Sport {
    key: ID!,
    name: String!,
    eventCount: Int,
    competitionCount: Int,
}

type Team {
    key: String!,
    name: String!,
    abbreviation: String!,
    nationality: String!,
}

type Event {
    id: ID!,
    cutoffTime: String,
    key: String,
    name: String,
    status: String,
    home: Team,
    away: Team,
}

type Fixture {
    key: String!,
    name: String!,
    category: Category!,
    events: [Event],
}

type Odds {
    maxStake: Float,
    minStake: Float,
    outcome: String,
    params: String,
    price: Float,
    probability: Float,
    side: String,
    status: String,
}

type Query {
    sports: [Sport]
    fixturesByDateAndSport(date: Date!, sport: String!): [Fixture]
    oddsByEventIdAndMarketUrl(eventId: Int!, marketUrl: String!): Odds
}